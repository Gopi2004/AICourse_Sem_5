"""
Problem Description:
    As you all know about 8-puzzle game discussed in the AI class. 
    You must write a function called Create (Initial state, Level number) to generate all the states of 
    8-puzzle game starting from the given initial state up to a particular level. The initial state and level number 
    are the input to the Create function. Use the suitable data structure to represent the state of the 8-puzzle
    game and use the actions (Up, Down, Left, and Right ) to generate the new states. Print all the states which are
    generated by the Create function.

"""
# AP21110010167

# Define a class to represent the 8-puzzle state
class EightPuzzleState:
    def __init__(self, state):
        self.state = state  # A list representing the puzzle state
        self.level = 0  # The level (depth) of this state in the search tree

    def __str__(self):
        return '\n'.join([str(self.state[i:i+3]) for i in range(0, 9, 3)])

# Define a function to generate new states by applying actions (Up, Down, Left, Right)
def generate_new_states(state):
    new_states = []
    blank_index = state.state.index(0)  # Find the index of the blank (0) tile

    # Define the possible moves (Up, Down, Left, Right)
    moves = [(0, -1), (0, 1), (-1, 0), (1, 0)]

    for move in moves:
        dx, dy = move
        x, y = blank_index // 3 + dx, blank_index % 3 + dy

        # Check if the new position is within the puzzle bounds
        if 0 <= x < 3 and 0 <= y < 3:
            new_state = state.state[:]
            new_state[blank_index], new_state[x * 3 + y] = new_state[x * 3 + y], new_state[blank_index]
            new_states.append(EightPuzzleState(new_state))

    return new_states

# Define the Create function to generate states up to a particular level
def Create(initial_state, level):
    states_to_explore = [initial_state]

    for current_level in range(level + 1):
        next_level_states = []

        for state in states_to_explore:
            print(f"Level {state.level}:\n{state}\n")

            if state.level < level:
                next_states = generate_new_states(state)
                for next_state in next_states:
                    next_state.level = state.level + 1
                next_level_states.extend(next_states)

        states_to_explore = next_level_states

# Example usage:
initial_state = EightPuzzleState([1, 2, 3, 0, 4, 6, 7, 5, 8])
level_number = 2
Create(initial_state, level_number)
